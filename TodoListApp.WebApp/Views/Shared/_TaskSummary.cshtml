@using TodoListApp.Models.DTOs;
@using TodoListApp.Models.Enums
@model TaskItemModel

@{
    var role = TempData["UserRole"] as TodoListRole?;
}

<div class="card h-100 mt-2 border-2 shadow @(Model.IsOverDue ? "border-danger" : "")">
    <div class="card-body d-flex flex-column">
        @if (Model.IsOverDue)
        {
            <p class="card-text fs-6 text-danger"><i class="fa-solid fa-exclamation"></i> Overdue</p>
        }
        <h6 class="card-text">@Model.Title</h6>
        <p class="card-text flex-grow-1 small me-5 mb-1">@(Model.Description == null ? "No description" : Model.Description)</p>
        <div class="dropdown-divider"></div>
        <div class="mb-2">
            @switch (Model.Status)
            {
                case TaskItemStatus.NotStarted:
                    <span class="badge bg-secondary"><i class="fa-solid fa-hourglass"></i> Not Started</span>
                    break;
                case TaskItemStatus.InProgress:
                    <span class="badge bg-primary"><i class="fa-solid fa-spinner"></i> In Progress</span>
                    break;
                case TaskItemStatus.Completed:
                    <span class="badge bg-success"><i class="fa-regular fa-circle-check"></i> Completed</span>
                    break;
            }
        </div>
        <div class="mb-1">
            <p class="card-text small m-0">
                <i class="fa-regular fa-calendar-plus"></i> Created @Model.CreatedDate.Date.ToString("dd.MM.yy") | 
                <i class="fa-regular fa-clock"></i> Due @(Model.DueDate == null ? "never" : Model.DueDate.Value.ToString("dd.MM.yy"))
            </p>
            <div class="text-muted mt-2">
                @if (role != TodoListRole.Owner)
                {
                    <p class="small m-0"><i class="fa-solid fa-circle-user"></i> @Model.Owner</p>
                }
                <p class="small"><i class="fa-solid fa-people-arrows"></i> Assigned to @(Model.AssignedTo == this.User.Identity!.Name ? "me" : Model.AssignedTo)</p>
            </div>
        </div>
        <div class="d-flex justify-content-between">
            <a class="btn btn-sm btn-primary"
               asp-controller="Task"
               asp-action="Details"
               asp-route-todoListId="@Model.TodoListId"
               asp-route-id="@Model.Id">
                <i class="fa-solid fa-circle-info"></i>
                Details
            </a>
            <div class="btn-group">
                <button class="btn btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fa-solid fa-ellipsis-vertical"></i>
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a class="dropdown-item small" asp-action="Edit" asp-route-todoListId="@Model.TodoListId" asp-route-id="@Model.Id">
                            <i class="fa-regular fa-pen-to-square"></i>
                            Edit
                        </a>
                    </li>
                    <li>
                        <a class="dropdown-item small" asp-action="Delete" asp-route-todoListId="@Model.TodoListId" asp-route-id="@Model.Id">
                            <i class="fa-solid fa-trash" style="color: #c44545;"></i>
                            Delete
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>