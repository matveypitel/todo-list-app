@using TodoListApp.Models.DTOs;
@using TodoListApp.Models.Enums
@model TaskItemModel

@{
    ViewData["Title"] = " Task Details";
    var userRole = TempData["UserRole"] as TodoListRole?;
    var viewer = userRole == TodoListRole.Viewer;
}

<h4>@ViewData["Title"]</h4>
<div class="card h-100 mt-2 border-2 shadow @(Model.IsOverDue && Model.IsActive ? "border-danger" : "")">
    <div class="card-body d-flex flex-column">
        @if (Model.IsOverDue)
        {
            <p class="card-text fs-6 text-danger"><i class="fa-solid fa-exclamation"></i> Overdue</p>
        }
        <h4 class="card-text">@Model.Title</h4>
        <p class="card-text flex-grow-1 me-5 mb-1">@(Model.Description == null ? "No description" : Model.Description)</p>
        <div class="dropdown-divider"></div>
        <div class="mb-2">
            @switch (Model.Status)
            {
                case TaskItemStatus.NotStarted:
                    <span class="badge bg-secondary"><i class="fa-solid fa-hourglass"></i> Not Started</span>
                    break;
                case TaskItemStatus.InProgress:
                    <span class="badge bg-primary"><i class="fa-solid fa-spinner"></i> In Progress</span>
                    break;
                case TaskItemStatus.Completed:
                    <span class="badge bg-success"><i class="fa-regular fa-circle-check"></i> Completed</span>
                    break;
            }
        </div>
        <div>
            <p class="card-text small m-0">
                <i class="fa-regular fa-calendar-plus"></i> Created @Model.CreatedDate.Date.ToString("dd.MM.yy") |
                <i class="fa-regular fa-clock"></i> Due @(Model.DueDate == null ? "never" : Model.DueDate.Value.ToString("dd.MM.yy"))
            </p>
            <div class="text-muted mt-2">
                <p class="small m-0"><i class="fa-solid fa-circle-user"></i> @Model.Owner</p>
                <p class="small"><i class="fa-solid fa-people-arrows"></i> Assigned to @(Model.AssignedTo == this.User.Identity!.Name ? "me" : Model.AssignedTo)</p>
            </div>
        </div>
        <div>
            <i class="fa-solid fa-tags"></i>
            @if (!viewer)
            {
                <a class="text-success" asp-action="AddTag" asp-route-todoListId="@Model.TodoListId" asp-route-taskId="@Model.Id">
                    <i class="fa-solid fa-plus"></i>
                </a>
            }
            <br />
            @foreach (var tag in Model.Tags)
            {
                <span class="badge" style="background-color: #297f6e;">
                    @tag.Label
                    @if (!viewer)
                    {
                    <a class="text-white text-lg-end" asp-action="DeleteTag" asp-route-todoListId="@Model.TodoListId" asp-route-taskId="@Model.Id" asp-route-tagId="@tag.Id">
                        <i class="fa-solid fa-xmark"></i>
                    </a>
                    }
                </span>
            }
        </div>
    </div>
</div>

<div class="mt-4">
    <h5><i class="fa-regular fa-comments"></i> Latest Comments</h5>
    @if (!viewer)
    {
        <a class="btn btn-sm btn-outline-success mt-2 mb-2" asp-action="AddComment" asp-route-todoListId="@Model.TodoListId" asp-route-taskId="@Model.Id">
            <i class="fa-solid fa-comment-medical"></i>
        </a>
    }
    @if (Model.Comments.Any())
    {
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.Id).Take(5))
        {
            <div class="card mb-2 shadow-sm" style="border-radius: 25px;">
                <div class="card-body">
                    <p class="card-text">@comment.Text</p>
                    <footer class="blockquote-footer">@@@comment.Owner</footer>
                </div>
            </div>
        }
    }
    else
    {
        <p>No comments</p>
    }
    @if (!viewer)
    {
        @if (Model.Comments.Count > 5)
        {
            <div class="text-center mt-4">
                <a class="btn btn-sm btn-outline-primary mt-2" asp-action="Comments" asp-route-todoListId="@Model.TodoListId" asp-route-taskId="@Model.Id">
                    <i class="fa-regular fa-comment-dots"></i>
                    View all comments
                </a>
            </div>
        }
    }
</div>

<a class="btn btn-sm btn-outline-secondary" asp-action="Index" asp-route-todoListId="@Model.TodoListId">
    <i class="fa-solid fa-angles-left"></i>
    Back to List
</a>