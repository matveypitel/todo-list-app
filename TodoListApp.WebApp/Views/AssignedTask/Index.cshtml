@using TodoListApp.Models.DTOs;
@model PagedModel<TaskItemModel>

@{
    ViewData["Title"] = "Assigned tasks";
    var currentStatus = Context.Request.Query["status"];
    var currentSort = Context.Request.Query["sort"];
    var isFormSubmitted = !string.IsNullOrEmpty(currentStatus) || !string.IsNullOrEmpty(currentSort);
}


<h2 class="mb-4"><i class="fa-solid fa-people-arrows"></i> @ViewData["Title"]</h2>

<button class="btn btn-sm btn-primary mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false" aria-controls="filterCollapse">
    Show filters
</button>

<form method="get" class="form-inline mb-3 mt-2 collapse @(isFormSubmitted ? "show" : "")" id="filterCollapse">
    <div class="form-group mr-2">
        <label for="status" class="mr-2">Status</label>
        <select id="status" name="status" class="form-control">
            <option value="">No filter</option>
            <option value="All">All</option>
            <option value="NotStarted">Not Started</option>
            <option value="InProgress">In Progress</option>
            <option value="Completed">Completed</option>
        </select>
    </div>
    <div class="form-group mr-2">
        <label for="sort" class="mr-2">Sort by</label>
        <select id="sort" name="sort" class="form-control">
            <option value="">No Sort</option>
            <option value="DueDate">Due Date</option>
            <option value="Title">Title</option>
        </select>
    </div>
    <button type="submit" class="btn btn-outline-primary mt-2">Apply</button>
    <a asp-action="Index" class="btn btn-secondary mt-2">Reset</a>
</form>
@foreach (var task in Model.Items ?? Enumerable.Empty<TaskItemModel>())
{
    <partial name="_AssignedTaskSummary" model="task" />
}


<div class="pagination-container">
    <div class="pagination" is-assignedTask-model="" page-model="@Model" page-action="Index"></div>
</div>